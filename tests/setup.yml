---
- name: create hosts for role test
  hosts: localhost
  gather_facts: no
  connection: local

  vars_files:
    - common.yml
    - secret.yml

  vars:
    os_images:
      - fedora-30-x64
      - centos-7-x64
      - debian-9-x64
      - ubuntu-18-04-x64

  tasks:
    - name: create cache directory
      file:
        path: "{{ cache_dir }}"
        state: directory
        mode: 0755

    - name: create private directory
      file:
        path: "{{ private_dir }}"
        state: directory
        mode: 0700

    - openssh_keypair:
        path: "{{ ssh_private_key_file }}"
        size: 2048

    - debug:
        msg: "{{ lookup('file', ssh_public_key_file) }}"

    - debug:
        msg: "{{ ssh_key_name }}"

    - name: register ssh key
      digital_ocean_sshkey:
        oauth_token: "{{ digitalocean_api_key }}"
        name: "{{ ssh_key_name }}"
        ssh_pub_key: "{{ lookup('file', ssh_public_key_file) }}"
        state: present
      register: ssh_key

    - name: save ssh key data
      copy:
        content: "{{ ssh_key.data.ssh_key }}" 
        dest: "{{ cache }}/ssh_key"

    - name: create a new droplet
      digital_ocean_droplet:
        state: present
        name: "{{ host_name }}"
        unique_name: yes
        size: 2gb
        region: sfo2
        image: "fedora-30-x64"
        ssh_keys: 
        - "{{ ssh_key.data.ssh_key.id }}"
        oauth_token: "{{ digitalocean_api_key }}"
        wait_timeout: 500
        monitoring: no
      register: droplet

    - name: save droplet data
      copy:
        content: "{{ droplet.data.droplet }}" 
        dest: "{{ cache }}/droplet"

    - name: write inventory
      copy:
        content: |
          java_hosts: 
            hosts:
              java_1:
                ansible_python_interpreter: python3
                ansible_ssh_host: "{{ droplet.data.ip_address }}"
                ansible_ssh_user: root
                ansible_ssh_private_key_file: "{{ ssh_private_key_file }}"
        dest: "{{ cache | default('cache') }}/inventory.yml"

    - name: wait for ssh on instances
      wait_for:
        delay: 1
        host: "{{ droplet.data.ip_address }}"
        port: 22
        state: started
        timeout: 60


