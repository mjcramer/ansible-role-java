---
- name: create hosts for role test
  hosts: localhost
  gather_facts: no
  connection: local

  vars:
    host_name: ansible-java-test
    private_dir: "./ssh"
    ssh_key_name: travis
    ssh_private_key_file: "{{ private_dir }}/{{ ssh_key_name }}"
    ssh_public_key_file: "{{ private_dir }}/{{ ssh_key_name }}.pub"
    os_images:
    - fedora-30-x64
    - centos-7-x64
    - debian-9-x64
    - ubuntu-18-04-x64

  vars_files:
    - secret.yml

  tasks:
  - name: create private directory
    file:
      path: "{{ private_dir }}"
      state: directory
      mode: 0700

  - name: generate private key
    openssl_privatekey:
      path: "{{ ssh_private_key_file }}"

  - name: generate public key 
    openssl_publickey:
      format: OpenSSH
      privatekey_path: "{{ ssh_private_key_file }}"
      path: "{{ ssh_public_key_file }}"

  - include_tasks: droplet-create.yml
    vars:
      droplet_name: "{{ host_name }}"
      droplet_os: "fedora-30-x64"

  - name: add host to inventory
    add_host:
      name: "{{ host_name }}"
      groups: java_hosts
      ansible_python_interpreter: /usr/bin/python3
      ansible_ssh_host: "{{ droplet.data.ip_address }}"
      ansible_ssh_user: root
      ansible_ssh_private_key_file: "{{ ssh_private_key_file }}"

  - name: wait for ssh on instances
    wait_for:
      delay: 1
      host: "{{ droplet.data.ip_address }}"
      port: 22
      state: started
      timeout: 60

- name: apply role to instance
  hosts: java_hosts
  
  roles:
   - role: ../../ansible-role-java
     become: yes

- name: destroy hosts from role test
  hosts: localhost
  gather_facts: no
  connection: local

  vars:
    host_name: ansible-java-test
    private_dir: "./ssh"
    ssh_key_name: travis
    ssh_private_key_file: "{{ private_dir }}/{{ ssh_key_name }}"
    ssh_public_key_file: "{{ private_dir }}/{{ ssh_key_name }}.pub"
    os_images:
    - fedora-30-x64
    - centos-7-x64
    - debian-9-x64
    - ubuntu-18-04-x64

  vars_files:
    - secret.yml
  
  tasks:

  - include_tasks: droplet-destroy.yml
    vars:
      droplet_name: "{{ host_name }}"
      droplet_os: "fedora-30-x64"

  # - name: destroy private directory
  #   file:
  #     path: "{{ private_dir }}"
  #     state: removed
